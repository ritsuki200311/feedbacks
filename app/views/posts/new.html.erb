<!-- ホームに戻るリンク -->
<%= link_to root_path, class: "inline-flex items-center gap-2 bg-blue-100 hover:bg-blue-200 text-blue-600 hover:text-gray-700 transition font-semibold px-4 py-2 rounded-lg shadow-md text-lg mb-6 mt-8" do %>
  <svg class="w-5 h-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 14 24">
    <path stroke-linecap="round" stroke-linejoin="round" d="M9 19l-7-7 7-7" />
  </svg>
  ホームに戻る
<% end %>

<h1 class="text-2xl font-bold mt-6 mb-4">新規投稿</h1>

<%= form_with model: @post, local: true do |form| %>

  <!-- エラー表示 -->
  <% if @post.errors.any? %>
    <div class="error-messages mb-6 p-4 border border-red-400 bg-red-100 rounded">
      <h2 class="font-bold text-red-700 mb-2"><%= pluralize(@post.errors.count, "件のエラー") %>が発生しました：</h2>
      <ul class="list-disc list-inside text-red-600">
        <% @post.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- タイトル -->
  <div>
    <%= form.label :title, "タイトル", class: "block text-gray-700 mb-1" %>
    <%= form.text_field :title, class: "w-full rounded border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 p-2" %>
  </div>

  <!-- 本文 -->
  <div class="mt-4">
    <%= form.label :body, "本文", class: "block text-gray-700 mb-1" %>
    <%= form.text_area :body, class: "w-full rounded border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 p-2 h-40" %>
  </div>

  <!-- タグ -->
  <%= render 'checkbox_options',
             title: "タグを選んでください（複数選択可）",
             field_name: "post[tag_list][]",
             options: tag_options,
             selected: @post.tag_list %>

  <!-- 送りたい人の情報 -->
  <%= render 'checkbox_options',
             title: "1. 送りたい人の立場",
             field_name: "post[recipient_standing][]",
             options: recipient_standing_options,
             selected: @post.recipient_standing %>

  <%= render 'checkbox_options',
             title: "2. 創作歴",
             field_name: "post[recipient_creation_experience][]",
             options: recipient_creation_experience_options,
             selected: @post.recipient_creation_experience %>

  <%= render 'checkbox_options',
             title: "3. 趣味・関心ジャンル",
             field_name: "post[recipient_interests][]",
             options: recipient_interests_options,
             selected: @post.recipient_interests %>

  <%= render 'checkbox_options',
             title: "4. 年齢層",
             field_name: "post[recipient_age_group][]",
             options: recipient_age_group_options,
             selected: @post.recipient_age_group %>

  <%= render 'checkbox_options',
             title: "5. 支援したいジャンル",
             field_name: "post[recipient_support_genres][]",
             options: recipient_support_genres_options,
             selected: @post.recipient_support_genres %>

  <%= render 'checkbox_options',
             title: "6. 応援スタイル",
             field_name: "post[recipient_support_styles][]",
             options: recipient_support_styles_options,
             selected: @post.recipient_support_styles %>

  <%= render 'checkbox_options',
             title: "7. 性格傾向",
             field_name: "post[recipient_personality_traits][]",
             options: recipient_personality_traits_options,
             selected: @post.recipient_personality_traits %>


  <!-- 送信ボタン -->
  <div class="mt-6">
    <%= form.submit "投稿する", class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
  </div>

<% end %>

<!-- チェックボックス選択時のスタイル調整 -->
<script>
  document.addEventListener('turbo:load', function () {
    const containers = document.querySelectorAll('.checkbox-options-container');

    function updateLabelStyle(checkbox) {
      const label = checkbox.closest('label');
      if (checkbox.checked) {
        label.classList.add('bg-blue-400', 'text-white');
        label.classList.remove('bg-gray-200', 'hover:bg-gray-300');
      } else {
        label.classList.remove('bg-blue-400', 'text-white');
        label.classList.add('bg-gray-200', 'hover:bg-gray-300');
      }
    }

    containers.forEach(function (container) {
      const checkboxes = container.querySelectorAll('input[type="checkbox"]');
      checkboxes.forEach(function (checkbox) {
        // 初期状態のスタイル設定
        updateLabelStyle(checkbox);

        // 変更イベントにリスナーを追加
        checkbox.addEventListener('change', function () {
          updateLabelStyle(this);
        });
      });
    });
  });
</script>
